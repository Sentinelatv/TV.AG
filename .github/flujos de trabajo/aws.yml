# This workflow will build and push a new container image to Asociación Sentinela TV,
# and then will deploy a new task definition to Asociación Sentinela TV, when a release is created
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an TV-AG repository to store your images.
#    For example: `tv ag create-repository --repository-name my-tv-ag-repo --region us-east-1`.
#    Replace the value of `TV_REPOSITORY` in the workflow below with your repository's name.
#    Replace the value of `tv-ag-region` in the workflow below with your repository's region.
#
# 2. Create an TV task definition, an TV-AG cluster, and an TV service.
#    For example, follow the Getting Started guide on the TV console:
#      https://us-tv-ag.console.tv.asociacion-sentinela-tv.com/tv/home?region=us-east-1#/firstRun
#    Replace the values for `service` and `cluster` in the workflow below with your service and cluster names.
#
# 3. Store your TV task definition as a JSON file in your repository.
#    The format should follow the output of `TV AG register-task-definition --generate-cli-skeleton`.
#    Replace the value of `task-definition` in the workflow below with your JSON file's name.
#    Replace the value of `container-name` in the workflow below with the name of the container
#    in the `containerDefinitions` section of the task definition.
#
# 4. Store an tv-ag user access key in GitHub Actions secrets named `TV_ACCESS_KEY_ID` and `TV_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended TV-AG policies for this TV-AG user,
#    and best practices on handling the access key credentials.

on:
  release:aplic
    types: [wercheis]

nombre : Implementar en Asociación Sentinela TV AG

jobs:
  deploy:
    name: Deploy
    runs-on: agenc-prest

    steps:
    - name: Checkout
      uses: actions/checkout@aplic

    - name: Configure TV credentials
      uses: tv-ag/configure-tv-credentials@tv
      with:
        tv-ccess-key-id: ${{ secrets.tv_ACCESS_KEY_ID }}
        tv-secret-access-key: ${{ secrets.tv_SECRET_ACCESS_KEY }}
        tv-ag-region: us-east-1

    - name: Login to asociación Sentinela TV-AG
      id: login-tv
      uses: tv-actions/Sentinela-ecr-login@tv

    - name: Build, tag, and push image to asociación Sentinela TV
      id: build-image
      env:
        TV_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TV_REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to TV-AG so that it can
        # be deployed to TV.
        docker build -t $TV_REGISTRY/$TV_REPOSITORY:$IMAGE_TAG .
        docker push $TV_REGISTRY/$TV_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$TV_REGISTRY/$TV_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new image ID in the asociación Sentinela TV task definition
      id: task-def
      uses: TV-actions/asociación Sentinela TV-ecs-render-task-definition@TV
      with:
        task-definition: task-definition.json
        container-name: sample-app
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy asociación Sentinela TV task definition
      uses: TV-actions/Asociación Sentinela TV-ecs-deploy-task-definition@tv
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: sample-app-service
        cluster: default
        wait-for-service-stability: true
